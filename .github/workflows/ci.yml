name: ETL

on:
  push:
    branches:
      - main
  schedule:
    - cron: 0 0 * * 0
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Run the ETL pipeline
  run:
    name: Run
    runs-on: ubuntu-latest
    env:
      HUGGINGFACE_TOKEN: ${{ secrets.HUGGINGFACE_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: astral-sh/setup-uv@v2
        with:
          enable-cache: true
      - name: Install Python 3.12
        run: uv python install 3.12
      - name: Run
        run: |
          make run
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      - name: Upload database to release
        if: github.event_name == 'schedule'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.date.outputs.date }}
          file: data/database.duckdb
          asset_name: datalia.duckdb
          overwrite: true
  # Build and upload the website
  upload:
    name: Upload Page
    needs: run
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache-dependency-path: 'web/package.json'
          cache: npm
      - run: npm ci --prefix ./web
      - run: npm run build --prefix ./web
      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: web/dist

  # Deploy the website
  deploy:
    name: Deploy Page
    needs: upload
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
